/// <reference types="react" />
import { EditorProps } from '@monaco-editor/react';
import { InputSize } from '../InputField';
export type CodeFieldProps = Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, 'onChange'> & {
    language: string;
    onChange?: EditorProps['onChange'];
    clean?: boolean;
    isDarkTheme?: boolean;
    containerClassName?: string;
    noMinHeight?: boolean;
    padding?: number;
    height?: string;
    size?: `${InputSize}`;
    label?: React.ReactNode;
    description?: React.ReactNode;
    onMount?: EditorProps['onMount'];
};
export declare const formatCode: (editor: editor.IStandaloneCodeEditor) => void;
/**
 * Editor props: https://github.com/suren-atoyan/monaco-react#props
 * Editor playground: https://monaco-react.surenatoyan.com/
 *
 * List of custom themes: https://github.com/brijeshb42/monaco-themes/tree/master/themes
 * How to define themes: https://codesandbox.io/s/monaco-theme-oijvt
 */
export default function CodeField({ size, value, label, language, onChange, clean, padding, isDarkTheme, className, containerClassName, noMinHeight, onMount, readOnly, description }: CodeFieldProps): import("react/jsx-runtime").JSX.Element;
